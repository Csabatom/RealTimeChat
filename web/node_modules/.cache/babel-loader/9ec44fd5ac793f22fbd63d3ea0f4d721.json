{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\React\\\\RealTimeChat\\\\web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: ''\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    io.connect('http://localhost:4000').on('message', ({\n      message\n    }) => {\n      setChat([...chat, {\n        message\n      }]);\n    });\n  });\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      message\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      message\n    } = state;\n    socket = io.connect('http://localhost:4000');\n    socket.emit('message', {\n      message\n    });\n    setState({\n      message: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: e => onTextChange(e),\n        value: state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: renderChat()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/jSsvIWo5gAhr/0TCBUcAOlifME=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/wamp64/www/React/RealTimeChat/web/src/App.js"],"names":["React","useState","useEffect","io","App","state","setState","message","chat","setChat","connect","on","onTextChange","e","target","name","value","renderChat","map","index","onMessageSubmit","preventDefault","socket","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,OAAO,EAAE;AAAV,GAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,EAAE,CAACO,OAAH,CAAW,uBAAX,EAAoCC,EAApC,CAAuC,SAAvC,EAAkD,CAAC;AAACJ,MAAAA;AAAD,KAAD,KAAe;AAC/DE,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACD,QAAAA;AAAD,OAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,CAAT;;AAMA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAtC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOT,IAAI,CAACU,GAAL,CAAS,CAAC;AAACX,MAAAA;AAAD,KAAD,EAAYY,KAAZ,kBACd;AAAA,6BACE;AAAA,kBAAIZ;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF,OAAUY,KAAV;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,QAAMC,eAAe,GAAIP,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACQ,cAAF;AACA,UAAM;AAACd,MAAAA;AAAD,QAAYF,KAAlB;AACAiB,IAAAA,MAAM,GAAGnB,EAAE,CAACO,OAAH,CAAW,uBAAX,CAAT;AACAY,IAAAA,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAuB;AAAEhB,MAAAA;AAAF,KAAvB;AACAD,IAAAA,QAAQ,CAAC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAR;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEa,eAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,QAAQ,EAAEP,CAAC,IAAID,YAAY,CAACC,CAAD,CAAjD;AAAsD,QAAA,KAAK,EAAER,KAAK,CAACE;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGU,UAAU;AADb;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzCQb,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport io from 'socket.io-client'\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({message: ''})\n  const [chat, setChat] = useState([])\n\n  useEffect(() => {\n    io.connect('http://localhost:4000').on('message', ({message}) => {\n      setChat([...chat, {message}])\n    })\n  })\n\n  const onTextChange = e => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n\n  const renderChat = () => {\n    return chat.map(({message}, index) => (\n      <div key={index}>\n        <p>{message}</p>\n      </div>\n    ))\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault()\n    const {message} = state\n    socket = io.connect('http://localhost:4000')\n    socket.emit('message', { message })\n    setState({message: ''})\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={onMessageSubmit}>\n        <input name=\"message\" onChange={e => onTextChange(e)} value={state.message}></input>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}