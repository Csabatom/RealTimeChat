{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\React\\\\RealTimeChat\\\\web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useRef, useEffect} from 'react';\n// import io from 'socket.io-client'\n// import './App.css';\n// const socket = io.connect('http://localhost:4000')\n// function App() {\n//   const [state, setState] = useState({message: ''})\n//   const [chat, setChat] = useState([])\n//   const socketRef = useRef()\n//   useEffect(\n// \t\t() => {\n// \t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\n// \t\t\tsocketRef.current.on(\"message\", ({ message }) => {\n// \t\t\t\tsetChat([ ...chat, { message } ])\n// \t\t\t})\n// \t\t\treturn () => socketRef.current.disconnect()\n// \t\t},\n// \t\t[ chat ]\n// \t)\n//   const onTextChange = e => {\n//     setState({ ...state, [e.target.name]: e.target.value })\n//   }\n//   const renderChat = () => {\n//     return chat.map(({message}, index) => (\n//       <div key={index}>\n//         <p>{message}</p>\n//       </div>\n//     ))\n//   }\n//   const onMessageSubmit = (e) => {\n//     e.preventDefault()\n//     const {message} = state\n//     socketRef.current.emit(\"message\", { message })\n//     setState({message: ''})\n//   }\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onMessageSubmit}>\n//         <input name=\"message\" onChange={e => onTextChange(e)} value={state.message}></input>\n//         <button>Send Message</button>\n//       </form>\n//       <div className=\"render-chat\">\n//         {renderChat()}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  });\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    socketRef.current.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    const {\n      name,\n      message\n    } = state;\n    socketRef.current.emit(\"message\", {\n      name,\n      message\n    });\n    e.preventDefault();\n    setState({\n      message: \"\",\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: e => onTextChange(e),\n        value: state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"oPp8AreUOgmwk3aeyTZ7KwCbCqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/wamp64/www/React/RealTimeChat/web/src/App.js"],"names":["React","useEffect","useRef","useState","io","App","state","setState","message","name","chat","setChat","socketRef","current","connect","on","disconnect","onTextChange","e","target","value","onMessageSubmit","emit","preventDefault","renderChat","map","index"],"mappings":"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","sourcesContent":["// import React, { useState, useRef, useEffect} from 'react';\n// import io from 'socket.io-client'\n// import './App.css';\n\n// const socket = io.connect('http://localhost:4000')\n\n// function App() {\n//   const [state, setState] = useState({message: ''})\n//   const [chat, setChat] = useState([])\n\n//   const socketRef = useRef()\n\n//   useEffect(\n// \t\t() => {\n// \t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\n// \t\t\tsocketRef.current.on(\"message\", ({ message }) => {\n// \t\t\t\tsetChat([ ...chat, { message } ])\n// \t\t\t})\n// \t\t\treturn () => socketRef.current.disconnect()\n// \t\t},\n// \t\t[ chat ]\n// \t)\n\n//   const onTextChange = e => {\n//     setState({ ...state, [e.target.name]: e.target.value })\n//   }\n\n//   const renderChat = () => {\n//     return chat.map(({message}, index) => (\n//       <div key={index}>\n//         <p>{message}</p>\n//       </div>\n//     ))\n//   }\n\n//   const onMessageSubmit = (e) => {\n//     e.preventDefault()\n//     const {message} = state\n//     socketRef.current.emit(\"message\", { message })\n//     setState({message: ''})\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onMessageSubmit}>\n//         <input name=\"message\" onChange={e => onTextChange(e)} value={state.message}></input>\n//         <button>Send Message</button>\n//       </form>\n//       <div className=\"render-chat\">\n//         {renderChat()}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useEffect, useRef, useState } from \"react\"\nimport io from \"socket.io-client\"\nimport \"./App.css\"\n\nfunction App() {\n\tconst [ state, setState ] = useState({ message: \"\", name: \"\" })\n\tconst [ chat, setChat ] = useState([])\n\n\tconst socketRef = useRef()\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\n\t\t\tsocketRef.current.on(\"message\", ({ name, message }) => {\n\t\t\t\tsetChat([ ...chat, { name, message } ])\n\t\t\t})\n\t\t\treturn () => socketRef.current.disconnect()\n\t\t},\n\t\t[ chat ]\n\t)\n\n\tconst onTextChange = (e) => {\n\t\tsetState({ ...state, [e.target.name]: e.target.value })\n\t}\n\n\tconst onMessageSubmit = (e) => {\n\t\tconst { name, message } = state\n\t\tsocketRef.current.emit(\"message\", { name, message })\n\t\te.preventDefault()\n\t\tsetState({ message: \"\", name })\n\t}\n\n\tconst renderChat = () => {\n\t\treturn chat.map(({ name, message }, index) => (\n\t\t\t<div key={index}>\n\t\t\t\t<h3>\n\t\t\t\t\t{name}: <span>{message}</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t))\n\t}\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<form onSubmit={onMessageSubmit}>\n\t\t\t\t<h1>Messenger</h1>\n\t\t\t\t<input name=\"message\" onChange={e => onTextChange(e)} value={state.message}></input>\n\t\t\t\t<button>Send Message</button>\n\t\t\t</form>\n\t\t\t<div className=\"render-chat\">\n\t\t\t\t<h1>Chat Log</h1>\n\t\t\t\t{renderChat()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}