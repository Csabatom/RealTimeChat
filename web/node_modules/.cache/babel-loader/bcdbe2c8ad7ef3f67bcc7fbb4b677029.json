{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\React\\\\RealTimeChat\\\\web\\\\src\\\\components\\\\ChatPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport ChatBubble from './ChatBubble';\nimport TextField from './TextField';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatPanel() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  const addMessage = message => {\n    if (!message.text || /^\\s*$/.test(message.text)) {\n      return;\n    }\n\n    const newMessages = [...messages, message];\n    socketRef.current.emit(\"message\", {\n      message\n    });\n    console.log(message, ...messages);\n    setMessages(newMessages);\n    window.scrollTo(0, document.documentElement.scrollHeight);\n  };\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    socketRef.current.on(\"message\", ({\n      message\n    }) => {\n      message.isOwn = false;\n      const newMessages = [...messages, message];\n      setMessages(newMessages);\n      window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);\n    });\n    return () => socketRef.current.disconnect();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-5 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(ChatBubble, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      onSubmit: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatPanel, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\n\n_c = ChatPanel;\nexport default ChatPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"sources":["C:/wamp64/www/React/RealTimeChat/web/src/components/ChatPanel.js"],"names":["React","useEffect","useRef","useState","ChatBubble","TextField","io","ChatPanel","messages","setMessages","socketRef","addMessage","message","text","test","newMessages","current","emit","console","log","window","scrollTo","document","documentElement","scrollHeight","connect","on","isOwn","body","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMO,SAAS,GAAGR,MAAM,EAAxB;;AAEA,QAAMS,UAAU,GAAGC,OAAO,IAAI;AAC1B,QAAG,CAACA,OAAO,CAACC,IAAT,IAAiB,QAAQC,IAAR,CAAaF,OAAO,CAACC,IAArB,CAApB,EAAgD;AAC5C;AACH;;AAED,UAAME,WAAW,GAAG,CAAC,GAAGP,QAAJ,EAAcI,OAAd,CAApB;AACAF,IAAAA,SAAS,CAACM,OAAV,CAAkBC,IAAlB,CAAuB,SAAvB,EAAkC;AAAEL,MAAAA;AAAF,KAAlC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqB,GAAGJ,QAAxB;AACAC,IAAAA,WAAW,CAACM,WAAD,CAAX;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,QAAQ,CAACC,eAAT,CAAyBC,YAA5C;AACH,GAVD;;AAYAvB,EAAAA,SAAS,CACX,MAAM;AACLS,IAAAA,SAAS,CAACM,OAAV,GAAoBV,EAAE,CAACmB,OAAH,CAAW,uBAAX,CAApB;AACAf,IAAAA,SAAS,CAACM,OAAV,CAAkBU,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEd,MAAAA;AAAF,KAAD,KAAiB;AACpCA,MAAAA,OAAO,CAACe,KAAR,GAAgB,KAAhB;AACZ,YAAMZ,WAAW,GAAG,CAAC,GAAGP,QAAJ,EAAcI,OAAd,CAApB;AACYH,MAAAA,WAAW,CAACM,WAAD,CAAX;AACAK,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,QAAQ,CAACM,IAAT,CAAcJ,YAAd,IAA8BF,QAAQ,CAACC,eAAT,CAAyBC,YAA1E;AACZ,KALD;AAMA,WAAO,MAAMd,SAAS,CAACM,OAAV,CAAkBa,UAAlB,EAAb;AACA,GAVU,EAWX,CAAErB,QAAF,CAXW,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAE,UAAF;AAAa,MAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAE,SAAF;AAAY,MAAA,QAAQ,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GApCQJ,S;;KAAAA,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport ChatBubble from './ChatBubble'\r\nimport TextField from './TextField';\r\nimport io from 'socket.io-client'\r\n\r\nfunction ChatPanel() {\r\n    const [messages, setMessages] = useState([])\r\n    const socketRef = useRef()\r\n\r\n    const addMessage = message => {\r\n        if(!message.text || /^\\s*$/.test(message.text)) {\r\n            return;\r\n        }\r\n\r\n        const newMessages = [...messages, message]\r\n        socketRef.current.emit(\"message\", { message })\r\n        console.log(message, ...messages)\r\n        setMessages(newMessages)\r\n        window.scrollTo(0, document.documentElement.scrollHeight);\r\n    }\r\n\r\n    useEffect(\r\n\t\t() => {\r\n\t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\r\n\t\t\tsocketRef.current.on(\"message\", ({ message }) => {\r\n                message.isOwn = false;\r\n\t\t\t\tconst newMessages = [...messages, message]\r\n                setMessages(newMessages)\r\n                window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);\r\n\t\t\t})\r\n\t\t\treturn () => socketRef.current.disconnect()\r\n\t\t},\r\n\t\t[ messages ]\r\n\t)\r\n\r\n    return (\r\n        <div className=\"pb-5 mb-5\">\r\n            < ChatBubble messages={messages} />\r\n            < TextField onSubmit={addMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPanel\r\n"]},"metadata":{},"sourceType":"module"}